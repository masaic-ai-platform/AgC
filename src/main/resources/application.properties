spring.application.name=open-responses
spring.jackson.generator.write-bigdecimal-as-plain=true

# Logging configuration
logging.level.root=INFO
logging.level.ai.masaic.openresponses=INFO
logging.level.ai.masaic.openresponses.api.controller=INFO
logging.level.ai.masaic.openresponses.tool=INFO
logging.level.org.springframework.web=INFO

# Custom logging pattern with thread ID, timestamp and log level
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [trace:%X{traceId}] [span:%X{spanId}] [parent:%X{parentId}] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [trace:%X{traceId}] [span:%X{spanId}] [parent:%X{parentId}] %-5level %logger{36} - %msg%n

# Micrometer Tracing configuration
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=prometheus,health,info,metrics,loggers
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.tags.application=${spring.application.name}

# Micrometer Observation configuration
management.observations.key-values.application=${spring.application.name}
management.observations.enable=true
management.defaults.metrics.enable=true
management.observations.http.server.requests.name=http.server.requests

# B3 propagation to maintain compatibility with existing tracing systems
management.tracing.propagation.type=B3

# Zipkin configuration (optional - for distributed tracing)
# management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
# management.tracing.sampling.probability=1.0

# Log file settings
logging.file.name=~/open-responses.log
logging.file.max-size=10MB
logging.file.max-history=10

# Hide sensitive request parameters in logs
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
spring.mvc.log-request-details=false

# Thread pool configuration
open-responses.thread-pool.core-size=20
open-responses.thread-pool.max-size=100
open-responses.thread-pool.queue-capacity=200
open-responses.thread-pool.keep-alive-seconds=60

# Connection pool configuration
open-responses.connection-pool.max-connections=500
open-responses.connection-pool.max-idle-time=30
open-responses.connection-pool.max-life-time=60

# HTTP client configuration
open-responses.http-client.connect-timeout=5
open-responses.http-client.read-timeout=30
open-responses.http-client.write-timeout=30

# API request timeout
api.request.timeout=30

# Server configuration
server.port=8080
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=20s

# Response store configuration (in-memory or mongodb)
open-responses.response-store.type=in-memory
