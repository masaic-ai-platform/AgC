spring.application.name=agc-platform
spring.jackson.generator.write-bigdecimal-as-plain=true

management.endpoints.web.exposure.include=health,info,metrics

# API request timeout
api.request.timeout=60
# Server configuration
server.port=6644
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=20s

# Thread pool configuration
open-responses.thread-pool.core-size=20
open-responses.thread-pool.max-size=100
open-responses.thread-pool.queue-capacity=200
open-responses.thread-pool.keep-alive-seconds=60

# Connection pool configuration
open-responses.connection-pool.max-connections=500
open-responses.connection-pool.max-idle-time=30
open-responses.connection-pool.max-life-time=60

# HTTP client configuration
open-responses.http-client.connect-timeout=5
open-responses.http-client.read-timeout=60
open-responses.http-client.write-timeout=60

# WebFlux codec configuration for large file uploads
spring.codec.max-in-memory-size=100MB
spring.webflux.multipart.max-in-memory-size=10MB
spring.webflux.multipart.max-disk-usage-per-part=500MB
spring.webflux.multipart.max-headers-size=20KB

#open-responses.store.vector.search.provider=qdrant
open-responses.embeddings.max_chunk_size_tokens=1000
open-responses.embeddings.chunk_overlap_tokens=200

open-responses.store.vector.search.qdrant.host=localhost
open-responses.store.vector.search.qdrant.port=6334
open-responses.store.vector.search.qdrant.apiKey=
open-responses.store.vector.search.qdrant.useTls=false
#open-responses.store.vector.repository.type=mongodb

#open-responses.store.type=mongodb
#open-responses.mongodb.uri=mongodb://localhost:27017/openresponses
#open-responses.mongodb.database=openresponses

otel.sdk.disabled=true
#otel.exporter.otlp.endpoint=http://localhost:4318
#otel.exporter.otlp.headers=
#otel.instrumentation.spring-webflux.enabled=false

open-responses.store.vector.search.cleanup.enabled=false
open-responses.store.vector.expiration.enabled=false

# Set to true to enable authentication
platform.deployment.auth.enabled=false
#platform.deployment.auth.google.audience=
###### comma separated list of whitelistedUsers users. ######
#platform.deployment.auth.whitelistedUsers=

#platform.deployment.apiKey=${OPENAI_API_KEY}
#platform.deployment.providers.{provider-name}.apiKey=
#platform.deployment.model=openai@gpt-4.1-mini
#platform.deployment.code.interpreter.name=
#platform.deployment.code.interpreter.url=
#platform.deployment.code.interpreter.apiKey=
#platform.deployment.mcp-server.enabled=true
###### comma separated list of APIkeys are supported. ######
#platform.deployment.mcp-server.validApiKeys=apip_key1,api_key2,api_key3

platform.deployment.multiplug.enabled=false

################## Temporal Properties ########################
#spring.temporal.namespace=
#spring.temporal.connection.target=
#spring.temporal.connection.api-key=
spring.temporal.workers.workflow-classes=ai.masaic.platform.api.tools.ClientSideToolExecutionWorkflow
#spring.temporal.workers.activity-beans=ai.masaic.platform.usecases.api.service.AtomAgentActivityImpl
#spring.temporal.workers.task-queue=ATOM_AGENT_Q
#spring.temporal.workers.name=atomAgent

